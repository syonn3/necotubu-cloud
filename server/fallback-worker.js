// server/fallback-worker.js（Cloudflare Worker／Replicateフォールバック）
const CORS_HEADERS={"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type, Authorization"};
export default{async fetch(request,env){if(request.method==="OPTIONS")return new Response(null,{status:204,headers:CORS_HEADERS});if(request.method!=="POST")return j({error:"method-not-allowed"},405);try{const {prompt}=await request.json().catch(()=>({}));if(!prompt||typeof prompt!=="string")return j({error:"invalid-prompt"},400);const token=env.REPLICATE_API_TOKEN;const version=env.REPLICATE_VERSION;if(!token||!version)return j({error:"missing-secrets",details:"Set REPLICATE_API_TOKEN and REPLICATE_VERSION"},500);const style=env.STYLE_HINT||"あなたは愛らしい猫です。やさしい日本語で、短く、ポジティブにつぶやいてください。絵文字は1つまで。";const maxNew=n(env.MAX_NEW_TOKENS,60);const temperature=n(env.TEMPERATURE,0.9);const inputText=`${style}\n\nユーザーの指示: ${prompt}\n\n出力:`;let pred=await fetch("https://api.replicate.com/v1/predictions",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${token}`},body:JSON.stringify({version,input:{prompt:inputText,max_new_tokens:maxNew,temperature}})}).then(r=>r.json());const start=Date.now();while(pred&&pred.status&&!["succeeded","failed","canceled"].includes(pred.status)){if(Date.now()-start>12000)break;await new Promise(r=>setTimeout(r,800));pred=await fetch(`https://api.replicate.com/v1/predictions/${pred.id}`,{headers:{Authorization:`Bearer ${token}`}}).then(r=>r.json())}const text=x(pred);if(!text)return j({error:"replicate-empty-output",prediction:pred},502);const one=String(text).split("\n").map(s=>s.trim()).filter(Boolean).join(" ");const out=one.length>80?one.slice(0,80).trim()+"…":one;return j({text:out})}catch(e){return j({error:"unhandled",message:String(e?.message||e)},500)}}};function j(d,s=200){return new Response(JSON.stringify(d),{status:s,headers:{"Content-Type":"application/json; charset=utf-8",...CORS_HEADERS}})}function n(v,d){const x=Number(v);return Number.isFinite(x)?x:d}function x(pred){if(!pred)return"";const o=pred.output;if(typeof o==="string")return o;if(Array.isArray(o)){const f=o.flat().filter(Boolean);const last=f[f.length-1];if(typeof last==="string")return last;if(last&&typeof last.text==="string")return last.text;const first=f[0];if(typeof first==="string")return first;if(first&&typeof first.text==="string")return first.text}if(o&&typeof o==="object"){if(typeof o.text==="string")return o.text;if(typeof o.content==="string")return o.content}if(typeof pred.text==="string")return pred.text;if(pred.data&&typeof pred.data.output==="string")return pred.data.output;return""}
